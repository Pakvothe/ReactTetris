{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","Cell","React","memo","Stage","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","count","setCount","onClick","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","mtrx","_","index","column","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","console","log","movePlayer","drop","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","move","keyCode","role","tabIndex","onKeyDown","e","onKeyUp","left","className","href","target","rel","right","round","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6cced309.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () => Array(STAGE_WIDTH).fill([0, 'clear']));\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  // THIS IS SLOWER!!!\n  // return player.tetromino.some((row, y) =>\n  //   row.some((cell, x) => {\n  //     if (cell !== 0) {\n  //       return (\n  //         !stage[y + player.pos.y + moveY] ||\n  //         !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n  //         stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n  //           'clear'\n  //       );\n  //     }\n  //     return false;\n  //   })\n  // );\n\n  // Using for loops to be able to return (and break). Not possible with forEach\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // 1. Check that we're on an actual Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // 2. Check that our move is inside the game areas height (y)\n          // That we're not go through bottom of the play area\n          !stage[y + player.pos.y + moveY] ||\n          // 3. Check that our move is inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // 4. Check that the cell wer'e moving to isn't set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n  // 5. If everything above is false\n  return false;\n};\n","import styled from 'styled-components';\n\nexport const StyledTetrisWrapper = styled.div`\n\twidth: 100vw;\n\theight: 100vh;\n\tbackground-color: #264653;\n\tbackground-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='200' viewBox='0 0 800 800'%3E%3Cg fill='none' stroke='%23e76f51' stroke-width='2'%3E%3Cpath d='M769 229L1037 260.9M927 880L731 737 520 660 309 538 40 599 295 764 126.5 879.5 40 599-197 493 102 382-31 229 126.5 79.5-69-63'/%3E%3Cpath d='M-31 229L237 261 390 382 603 493 308.5 537.5 101.5 381.5M370 905L295 764'/%3E%3Cpath d='M520 660L578 842 731 737 840 599 603 493 520 660 295 764 309 538 390 382 539 269 769 229 577.5 41.5 370 105 295 -36 126.5 79.5 237 261 102 382 40 599 -69 737 127 880'/%3E%3Cpath d='M520-140L578.5 42.5 731-63M603 493L539 269 237 261 370 105M902 382L539 269M390 382L102 382'/%3E%3Cpath d='M-222 42L126.5 79.5 370 105 539 269 577.5 41.5 927 80 769 229 902 382 603 493 731 737M295-36L577.5 41.5M578 842L295 764M40-201L127 80M102 382L-261 269'/%3E%3C/g%3E%3Cg fill='%23e9c46a'%3E%3Ccircle cx='769' cy='229' r='9'/%3E%3Ccircle cx='539' cy='269' r='9'/%3E%3Ccircle cx='603' cy='493' r='9'/%3E%3Ccircle cx='731' cy='737' r='9'/%3E%3Ccircle cx='520' cy='660' r='9'/%3E%3Ccircle cx='309' cy='538' r='9'/%3E%3Ccircle cx='295' cy='764' r='9'/%3E%3Ccircle cx='40' cy='599' r='9'/%3E%3Ccircle cx='102' cy='382' r='9'/%3E%3Ccircle cx='127' cy='80' r='9'/%3E%3Ccircle cx='370' cy='105' r='9'/%3E%3Ccircle cx='578' cy='42' r='9'/%3E%3Ccircle cx='237' cy='261' r='9'/%3E%3Ccircle cx='390' cy='382' r='9'/%3E%3C/g%3E%3C/svg%3E\");\n\toverflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n\tdisplay: flex;\n\tflex-direction: row-reverse;\n\talign-items: flex-start;\n\tjustify-content: center;\n\tpadding: 40px;\n\tmargin: 0 auto;\n\twidth: 100vw;\n\n\taside {\n\t\twidth: 100%;\n\t\tmax-width: 200px;\n\t\tdisplay: block;\n\t\tmargin-right: 3em;\n\t}\n\n\t.info_container{\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-between;\n\t\tmargin-left: 3em;\n\n\t\t.box_info{\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\talign-items: center;\n\t\t\tjustify-content: space-around;\n\t\t\tbox-sizing: border-box;\n\t\t\tborder: 3px solid #2a9d8f;\n\t\t\tborder-radius: 20px;\n\t\t\tmargin-bottom: 2em;\n\t\t\tpadding: 1em;\n\t\t\tbackground-color: rgba(42, 157, 143,0.6);\n\t\t\tcolor: white;\n\t\t\t\n\t\t\tp {\n\t\t\t\ttext-align: center;\n\t\t\t\tmargin: -0.1em;\n\t\n\t\t\t\t&:last-child{\n\t\t\t\t\tmargin-bottom: 0.5em;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.controls{\n\t\t\t\tdisplay:flex;\n\t\t\t}\n\n\t\t\ta {\n\t\t\t\tmargin-bottom: 1em;\n\t\t\t\ttext-decoration: none;\n\t\t\t\tcolor: white;\n\t\t\t\tfont-weight: 600;\n\t\n\t\t\t\t&:hover {\n\t\t\t\t\tcolor: #E9C46A;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n","export const TETROMINOS = {\n\t0: { shape: [[0]], color: '0, 0, 0' },\n\tI: {\n\t\tshape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\n\t\tcolor: '80, 227, 230',\n\t},\n\tJ: { shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]], color: '36, 95, 223' },\n\tL: {\n\t\tshape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n\t\tcolor: '223, 173, 36',\n\t},\n\tO: { shape: [['O', 'O'], ['O', 'O']], color: '223, 217, 36' },\n\tS: { shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]], color: '48, 211, 56' },\n\tT: {\n\t\tshape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n\t\tcolor: '132, 61, 198',\n\t},\n\tZ: { shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]], color: '227, 78, 78' },\n};\n\nexport const randomTetromino = () => {\n\tconst tetrominos = 'IJLOSTZ';\n\tconst randTetromino =\n\t\ttetrominos[Math.floor(Math.random() * tetrominos.length)];\n\treturn TETROMINOS[randTetromino];\n};\n","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n\tconst [stage, setStage] = useState(createStage());\n\tconst [rowsCleared, setRowsCleared] = useState(0);\n\n\tuseEffect(() => {\n\t\tsetRowsCleared(0);\n\t\tconst sweepRows = newStage =>\n\t\t\tnewStage.reduce((ack, row) => {\n\t\t\t\tif (row.findIndex(cell => cell[0] === 0) === -1) {\n\t\t\t\t\tsetRowsCleared(prev => prev + 1);\n\t\t\t\t\tack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n\t\t\t\t\treturn ack;\n\t\t\t\t}\n\t\t\t\tack.push(row);\n\t\t\t\treturn ack;\n\t\t\t}, []);\n\n\t\tconst updateStage = prevStage => {\n\t\t\t// First flush the stage\n\t\t\tconst newStage = prevStage.map(row =>\n\t\t\t\trow.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n\t\t\t);\n\n\t\t\t// Then draw the tetromino\n\t\t\tplayer.tetromino.forEach((row, y) => {\n\t\t\t\trow.forEach((value, x) => {\n\t\t\t\t\tif (value !== 0) {\n\t\t\t\t\t\tnewStage[y + player.pos.y][x + player.pos.x] = [\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t`${player.collided ? 'merged' : 'clear'}`,\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\t// Then check if we got some score if collided\n\t\t\tif (player.collided) {\n\t\t\t\tresetPlayer();\n\t\t\t\treturn sweepRows(newStage);\n\t\t\t}\n\t\t\treturn newStage;\n\t\t};\n\n\t\t// Here are the updates\n\t\tsetStage(prev => updateStage(prev));\n\t}, [\n\t\tplayer.collided,\n\t\tplayer.pos.x,\n\t\tplayer.pos.y,\n\t\tplayer.tetromino,\n\t\tresetPlayer,\n\t]);\n\n\treturn [stage, setStage, rowsCleared];\n};","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n\tdisplay: grid;\n\tgrid-template-rows: repeat(\n\t\t${props => props.height},\n\t\tcalc(25vw / ${props => props.width})\n\t);\n\tgrid-template-columns: repeat(${props => props.width}, 1fr);\n\tgrid-gap: 1px;\n\tborder: 3px solid #2A9D8F;\n\twidth: 100%;\n\tmax-width: 25vw;\n\tbackground-color: #2A9D8F;\n\tborder-radius: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\nborder-radius: 4px;\n  background: rgba(${props => props.color}, 0.6);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`;\n","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({ type }) => (\n\t<StyledCell type={type} color={TETROMINOS[type].color} />\n);\n\nexport default React.memo(Cell);","import React from 'react';\nimport { StyledStage } from './styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n\t<StyledStage width={stage[0].length} height={stage.length}>\n\t\t{stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n\t</StyledStage>\n);\n\nexport default Stage;","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-bottom: 1em;\n\tpadding: 20px;\n\tborder: 3px solid #2a9d8f;\n\tmin-height: 30px;\n\twidth: 100%;\n\tborder-radius: 20px;\n\tcolor: ${props => (props.gameOver ? 'red' : 'white')};\n\tbackground-color: rgba(42, 157, 143,0.6);\n\tfont-family: Pixel, Arial, Helvetica, sans-serif;\n\tfont-size: 0.8rem;\n`;\n","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n\t<StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n);\n\nexport default Display;","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst StyledStartButton = styled.button`\n\tbox-sizing: border-box;\n\tmargin-bottom: 1em;\n\tpadding: 1.5em;\n\twidth: 100%;\n\tborder-radius: 20px;\n\tborder: 3px solid #2A9D8F;\n\tcolor: white;\n\tbackground: rgba(38, 70, 83, 0.7);\n\tfont-family: Pixel, Arial, Helvetica, sans-serif;\n\tfont-size: 1rem;\n\toutline: none;\n\tcursor: pointer;\n\ttransition: background .2s ease-in-out;\n\n\t&:hover{\n\t\tbackground: #2a9d8f;\n\t}\n`;\n\nconst StartButton = ({ callback }) => {\n\tconst [count, setCount] = useState(true);\n\n\tconst onCount = () => {\n\t\tsetCount(!count);\n\t\tcallback();\n\t}\n\n\treturn (\n\t\t<StyledStartButton onClick={onCount}>\n\t\t\t{count === true ? 'Start Game' : 'Reset Game'}\n\t\t</StyledStartButton>\n\t);\n}\nexport default StartButton;\n","import React, { useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\nimport Zoom from 'react-reveal/Zoom';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n\tconst [dropTime, setDropTime] = useState(null);\n\tconst [gameOver, setGameOver] = useState(false);\n\n\tconst [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n\tconst [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n\tconst [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n\n\tconsole.log('re-render');\n\n\tconst movePlayer = dir => {\n\t\tif (!checkCollision(player, stage, { x: dir, y: 0 })) {\n\t\t\tupdatePlayerPos({ x: dir, y: 0 });\n\t\t}\n\t};\n\n\tconst keyUp = ({ keyCode }) => {\n\t\tif (!gameOver) {\n\t\t\tif (keyCode === 40) {\n\t\t\t\tsetDropTime(1000 / (level + 1));\n\t\t\t}\n\t\t}\n\t};\n\n\tconst startGame = () => {\n\t\tsetStage(createStage());\n\t\tsetDropTime(1000);\n\t\tresetPlayer();\n\t\tsetScore(0);\n\t\tsetLevel(0);\n\t\tsetRows(0);\n\t\tsetGameOver(false);\n\t};\n\n\tconst drop = () => {\n\t\t// Increase level when player has cleared 10 rows\n\t\tif (rows > (level + 1) * 10) {\n\t\t\tsetLevel(prev => prev + 1);\n\t\t\t// Also increase speed\n\t\t\tsetDropTime(1000 / (level + 1) + 200);\n\t\t}\n\n\t\tif (!checkCollision(player, stage, { x: 0, y: 1 })) {\n\t\t\tupdatePlayerPos({ x: 0, y: 1, collided: false });\n\t\t} else {\n\t\t\t// Game over!\n\t\t\tif (player.pos.y < 1) {\n\t\t\t\tconsole.log('GAME OVER!!!');\n\t\t\t\tsetGameOver(true);\n\t\t\t\tsetDropTime(null);\n\t\t\t}\n\t\t\tupdatePlayerPos({ x: 0, y: 0, collided: true });\n\t\t}\n\t};\n\n\tconst dropPlayer = () => {\n\t\tsetDropTime(null);\n\t\tdrop();\n\t};\n\n\t// This one starts the game\n\t// Custom hook by Dan Abramov\n\tuseInterval(() => {\n\t\tdrop();\n\t}, dropTime);\n\n\tconst move = ({ keyCode }) => {\n\t\tif (!gameOver) {\n\t\t\tif (keyCode === 37) {\n\t\t\t\tmovePlayer(-1);\n\t\t\t} else if (keyCode === 39) {\n\t\t\t\tmovePlayer(1);\n\t\t\t} else if (keyCode === 40) {\n\t\t\t\tdropPlayer();\n\t\t\t} else if (keyCode === 38) {\n\t\t\t\tplayerRotate(stage, 1);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<StyledTetrisWrapper\n\t\t\trole=\"button\"\n\t\t\ttabIndex=\"0\"\n\t\t\tonKeyDown={e => move(e)}\n\t\t\tonKeyUp={keyUp}\n\t\t>\n\t\t\t<StyledTetris>\n\t\t\t\t<Zoom left>\n\t\t\t\t\t<div className='info_container'>\n\t\t\t\t\t\t<aside className='box_info'>\n\t\t\t\t\t\t\t<h2>Tetris Game</h2>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p>Created by</p>\n\t\t\t\t\t\t\t\t<p>Franco Ortiz</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a href='https://github.com/Pakvothe/ReactTetris' target='_blank' rel='noreferrer'> ~ Repository ~ </a>\n\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t<aside className='box_info'>\n\t\t\t\t\t\t\t<h2>Controls</h2>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p className='controls'><span>⇧ </span> = Spin Tetromino</p>\n\t\t\t\t\t\t\t\t<p className='controls'><span>⇩ </span> = Fast Fall</p>\n\t\t\t\t\t\t\t\t<p className='controls'><span>⇨ </span> = Right</p>\n\t\t\t\t\t\t\t\t<p className='controls'><span>⇦ </span> = Left</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</aside>\n\t\t\t\t\t</div>\n\t\t\t\t</Zoom>\n\t\t\t\t<Stage stage={stage} />\n\t\t\t\t<Zoom right>\n\t\t\t\t\t<aside>\n\t\t\t\t\t\t{gameOver ? (\n\t\t\t\t\t\t\t<Display gameOver={gameOver} text=\"Game Over\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Display text={`Score: ${score}`} />\n\t\t\t\t\t\t\t\t\t<Display text={`rows: ${rows}`} />\n\t\t\t\t\t\t\t\t\t<Display text={`Level: ${level}`} />\n\t\t\t\t\t\t\t\t\t<Display text={`Down Speed: ${Math.round(dropTime)} ms`} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<StartButton callback={startGame} />\n\t\t\t\t\t</aside>\n\t\t\t\t</Zoom>\n\t\t\t</StyledTetris>\n\t\t</StyledTetrisWrapper>\n\t);\n};\n\nexport default Tetris;","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n\tconst [player, setPlayer] = useState({\n\t\tpos: { x: 0, y: 0 },\n\t\ttetromino: TETROMINOS[0].shape,\n\t\tcollided: false,\n\t});\n\n\tfunction rotate(matrix, dir) {\n\t\t// Make the rows to become cols (transpose)\n\t\tconst mtrx = matrix.map((_, index) => matrix.map(column => column[index]));\n\t\t// Reverse each row to get a rotaded matrix\n\t\tif (dir > 0) return mtrx.map(row => row.reverse());\n\t\treturn mtrx.reverse();\n\t}\n\n\tfunction playerRotate(stage, dir) {\n\t\tconst clonedPlayer = JSON.parse(JSON.stringify(player));\n\t\tclonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n\t\tconst pos = clonedPlayer.pos.x;\n\t\tlet offset = 1;\n\t\twhile (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n\t\t\tclonedPlayer.pos.x += offset;\n\t\t\toffset = -(offset + (offset > 0 ? 1 : -1));\n\t\t\tif (offset > clonedPlayer.tetromino[0].length) {\n\t\t\t\trotate(clonedPlayer.tetromino, -dir);\n\t\t\t\tclonedPlayer.pos.x = pos;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tsetPlayer(clonedPlayer);\n\t}\n\n\tconst updatePlayerPos = ({ x, y, collided }) => {\n\t\tsetPlayer(prev => ({\n\t\t\t...prev,\n\t\t\tpos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n\t\t\tcollided,\n\t\t}));\n\t};\n\n\tconst resetPlayer = useCallback(() => {\n\t\tsetPlayer({\n\t\t\tpos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n\t\t\ttetromino: randomTetromino().shape,\n\t\t\tcollided: false,\n\t\t});\n\t}, []);\n\n\treturn [player, updatePlayerPos, resetPlayer, playerRotate];\n};","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n\tconst [score, setScore] = useState(0);\n\tconst [rows, setRows] = useState(0);\n\tconst [level, setLevel] = useState(0);\n\n\tconst linePoints = [40, 100, 300, 1200];\n\n\tconst calcScore = useCallback(() => {\n\t\t// We have score\n\t\tif (rowsCleared > 0) {\n\t\t\t// This is how original Tetris score is calculated\n\t\t\tsetScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n\t\t\tsetRows(prev => prev + rowsCleared);\n\t\t}\n\t}, [level, linePoints, rowsCleared]);\n\n\tuseEffect(() => {\n\t\tcalcScore();\n\t}, [calcScore, rowsCleared, score]);\n\n\treturn [score, setScore, rows, setRows, level, setLevel];\n};","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n\tconst savedCallback = useRef();\n\t// Remember the latest callback.\n\tuseEffect(() => {\n\t\tsavedCallback.current = callback;\n\t}, [callback]);\n\n\t// Set up the interval.\n\tuseEffect(() => {\n\t\tfunction tick() {\n\t\t\tsavedCallback.current();\n\t\t}\n\t\tif (delay !== null) {\n\t\t\tconst id = setInterval(tick, delay);\n\t\t\treturn () => {\n\t\t\t\tclearInterval(id);\n\t\t\t};\n\t\t}\n\t}, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n\t<div className=\"App\">\n\t\t<Tetris />\n\t</div>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}