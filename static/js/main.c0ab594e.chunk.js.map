{"version":3,"sources":["firebase/index.js","gameHelpers.js","components/styles/StyledTetris.js","components/StartButton.js","tetrominos.js","hooks/useStage.js","redux/constants.js","redux/actions /index.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledLoading.js","components/loading.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","firestore","createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","StyledTetris","StyledStartButton","button","StartButton","callback","useState","count","setCount","onClick","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","useStage","resetPlayer","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","SET_DROP_TIME","SET_GAME_OVER","SET_CURRENT_PLAYER","setDropTime","payload","type","setGameOver","StyledStage","props","height","width","StyledCell","Cell","React","memo","Stage","StyledDisplay","gameOver","Display","text","useSelector","state","StyledLoader","LoadingOverlay","Loading","loading","active","spinner","className","classNamePrefix","Tetris","dispatch","useDispatch","dropTime","currentPlayer","setPlayer","rotate","matrix","dir","mtrx","_","index","column","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","setLoading","visit","setVisit","user","number","puntaje","setPuntaje","scores","collection","doc","get","then","puntajes","update","visits","FieldValue","increment","data","maxName","maxScore","secName","secScore","thirdName","thirdScore","objeto","array","pop","console","log","movePlayer","drop","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","move","keyCode","input","setInput","role","tabIndex","onKeyDown","e","onKeyUp","left","href","target","rel","right","round","onSubmit","preventDefault","onChange","placeholder","required","Swal","fire","heightAuto","title","icon","confirmButtonText","confirmButtonColor","App","initialState","Reducer","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0ab594e.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst app = firebase.initializeApp({\n\tapiKey: process.env.REACT_APP_FS_API_KEY,\n\tauthDomain: process.env.REACT_APP_FS_AUTH_DOMAIN,\n\tprojectId: process.env.REACT_APP_FS_PROJECT_ID,\n\tstorageBucket: process.env.REACT_APP_FS_STORAGE_BUCKET,\n\tmessagingSenderId: process.env.REACT_APP_FS_MESSAGING_SENDER_ID,\n\tappId: process.env.REACT_APP_FS_APP_ID\n});\n\nexport function getFirebase() {\n\treturn app;\n}\nexport function getFirestore() {\n\treturn firebase.firestore(app);\n}","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () => Array(STAGE_WIDTH).fill([0, 'clear']));\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  // THIS IS SLOWER!!!\n  // return player.tetromino.some((row, y) =>\n  //   row.some((cell, x) => {\n  //     if (cell !== 0) {\n  //       return (\n  //         !stage[y + player.pos.y + moveY] ||\n  //         !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n  //         stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n  //           'clear'\n  //       );\n  //     }\n  //     return false;\n  //   })\n  // );\n\n  // Using for loops to be able to return (and break). Not possible with forEach\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // 1. Check that we're on an actual Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // 2. Check that our move is inside the game areas height (y)\n          // That we're not go through bottom of the play area\n          !stage[y + player.pos.y + moveY] ||\n          // 3. Check that our move is inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // 4. Check that the cell wer'e moving to isn't set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n  // 5. If everything above is false\n  return false;\n};\n","import styled from 'styled-components';\n\nexport const StyledTetrisWrapper = styled.div`\n\twidth: 100vw;\n\theight: 100vh;\n\tbackground-color: #264653;\n\tbackground-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='200' viewBox='0 0 800 800'%3E%3Cg fill='none' stroke='%23e76f51' stroke-width='2'%3E%3Cpath d='M769 229L1037 260.9M927 880L731 737 520 660 309 538 40 599 295 764 126.5 879.5 40 599-197 493 102 382-31 229 126.5 79.5-69-63'/%3E%3Cpath d='M-31 229L237 261 390 382 603 493 308.5 537.5 101.5 381.5M370 905L295 764'/%3E%3Cpath d='M520 660L578 842 731 737 840 599 603 493 520 660 295 764 309 538 390 382 539 269 769 229 577.5 41.5 370 105 295 -36 126.5 79.5 237 261 102 382 40 599 -69 737 127 880'/%3E%3Cpath d='M520-140L578.5 42.5 731-63M603 493L539 269 237 261 370 105M902 382L539 269M390 382L102 382'/%3E%3Cpath d='M-222 42L126.5 79.5 370 105 539 269 577.5 41.5 927 80 769 229 902 382 603 493 731 737M295-36L577.5 41.5M578 842L295 764M40-201L127 80M102 382L-261 269'/%3E%3C/g%3E%3Cg fill='%23e9c46a'%3E%3Ccircle cx='769' cy='229' r='9'/%3E%3Ccircle cx='539' cy='269' r='9'/%3E%3Ccircle cx='603' cy='493' r='9'/%3E%3Ccircle cx='731' cy='737' r='9'/%3E%3Ccircle cx='520' cy='660' r='9'/%3E%3Ccircle cx='309' cy='538' r='9'/%3E%3Ccircle cx='295' cy='764' r='9'/%3E%3Ccircle cx='40' cy='599' r='9'/%3E%3Ccircle cx='102' cy='382' r='9'/%3E%3Ccircle cx='127' cy='80' r='9'/%3E%3Ccircle cx='370' cy='105' r='9'/%3E%3Ccircle cx='578' cy='42' r='9'/%3E%3Ccircle cx='237' cy='261' r='9'/%3E%3Ccircle cx='390' cy='382' r='9'/%3E%3C/g%3E%3C/svg%3E\");\n\toverflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n\tdisplay: flex;\n\tflex-direction: row-reverse;\n\talign-items: flex-start;\n\tjustify-content: center;\n\tpadding: 40px;\n\tmargin: 0 auto;\n\twidth: 100vw;\n\n\t.user_name {\n\t\ttext-align: center;\n\t\tcolor: #ec85e1;\n\t\tletter-spacing: 1px;\n\t}\n\t.user_input {\n\t\twidth: 100%;\n\t\tmax-width: 200px;\n\t\tborder-radius: 20px;\n\t\tbackground-color: rgba(255, 255, 255,0.9);\n\t\tborder: 3px solid #2a9d8f;\n\t\tpadding: 0.5em 1em;\n\t}\n\n\t.box_containers{\n\t\tdisplay: flex;\n\t\talign-items: flex-start;\n\t\tjustify-content: center;\n\t}\n\taside {\n\t\twidth: 100%;\n\t\tmax-width: 200px;\n\t\tdisplay: block;\n\t\tmargin-right: 3em;\n\t}\n\n\t.info_container{\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-between;\n\t\tmargin-left: 3em;\n\t\twidth: 100%;\n\t\talign-items: center;\n\t\n\t\t.box_info{\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\talign-items: center;\n\t\t\tjustify-content: space-around;\n\t\t\tbox-sizing: border-box;\n\t\t\tborder: 3px solid #2a9d8f;\n\t\t\tborder-radius: 20px;\n\t\t\tmargin-bottom: 2em;\n\t\t\tpadding: 1em;\n\t\t\tbackground-color: rgba(42, 157, 143,0.6);\n\t\t\tcolor: white;\n\t\t\twidth: 100%;\n\t\t\t\n\t\t\tp {\n\t\t\t\ttext-align: center;\n\t\t\t\tmargin: -0.1em;\n\t\n\t\t\t\t&:last-child{\n\t\t\t\t\tmargin-bottom: 0.5em;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.controls{\n\t\t\t\tdisplay:flex;\n\t\t\t}\n\n\t\t\ta {\n\t\t\t\tmargin-bottom: 1em;\n\t\t\t\ttext-decoration: none;\n\t\t\t\tcolor: white;\n\t\t\t\tfont-weight: 600;\n\t\n\t\t\t\t&:hover {\n\t\t\t\t\tcolor: #ec85e1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tul {\n\t\t\t\tlist-style: none;\n\t\t\t}\n\n\t\t\tlabel {\n\t\t\t\tdisplay: block;\n\t\t\t\twidth: 100%;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\n\t\t\th2{\n\t\t\t\tmargin-bottom: 0.5em;\n\t\t\t}\n\t\t\th4 {\n\t\t\t\ttext-align: center;\n\t\t\t\tmargin-bottom: 0.5em;\n\t\t\t}\n\t\t\t.amarillo{\n\t\t\t\tcolor: #E9C46A;\n\t\t\t\tfont-weight: 600;\n\t\t\t}\n\n\t\t\tspan {\n\t\t\t\tfont-size: 1.4em;\n\t\t\t}\n\t\t}\n\t}\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n\tbox-sizing: border-box;\n\tmargin-bottom: 1em;\n\tpadding: 1.5em;\n\twidth: 100%;\n\tborder-radius: 20px;\n\tborder: 3px solid #2A9D8F;\n\tcolor: white;\n\tbackground: rgba(38, 70, 83, 0.7);\n\tfont-family: Pixel, Arial, Helvetica, sans-serif;\n\tfont-size: 1rem;\n\toutline: none;\n\tcursor: pointer;\n\ttransition: background .2s ease-in-out;\n\tmargin-top: 1em;\n\n\t&:focus{\n\t\toutline: none;\n \t\tbox-shadow: none;\n\t}\n\t&:hover{\n\t\tbackground: #2a9d8f;\n\t}\n\n\t&.btn-sec{\n\t\tborder: 3px solid #ec85e1;\n\t}\n`;\n\nconst StartButton = ({ callback }) => {\n\tconst [count, setCount] = useState(true);\n\n\tconst onCount = () => {\n\t\tsetCount(!count);\n\t\tcallback();\n\t}\n\n\treturn (\n\t\t<StyledStartButton onClick={onCount}>\n\t\t\t{count === true ? 'Start Game' : 'Reset Game'}\n\t\t</StyledStartButton>\n\t);\n}\nexport default StartButton;\n","export const TETROMINOS = {\n\t0: { shape: [[0]], color: '0, 0, 0' },\n\tI: {\n\t\tshape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\n\t\tcolor: '80, 227, 230',\n\t},\n\tJ: { shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]], color: '36, 95, 223' },\n\tL: {\n\t\tshape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n\t\tcolor: '223, 173, 36',\n\t},\n\tO: { shape: [['O', 'O'], ['O', 'O']], color: '223, 217, 36' },\n\tS: { shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]], color: '48, 211, 56' },\n\tT: {\n\t\tshape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n\t\tcolor: '132, 61, 198',\n\t},\n\tZ: { shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]], color: '227, 78, 78' },\n};\n\nexport const randomTetromino = () => {\n\tconst tetrominos = 'IJLOSTZ';\n\tconst randTetromino =\n\t\ttetrominos[Math.floor(Math.random() * tetrominos.length)];\n\treturn TETROMINOS[randTetromino];\n};\n","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n\tconst [stage, setStage] = useState(createStage());\n\tconst [rowsCleared, setRowsCleared] = useState(0);\n\n\tuseEffect(() => {\n\t\tsetRowsCleared(0);\n\t\tconst sweepRows = newStage =>\n\t\t\tnewStage.reduce((ack, row) => {\n\t\t\t\tif (row.findIndex(cell => cell[0] === 0) === -1) {\n\t\t\t\t\tsetRowsCleared(prev => prev + 1);\n\t\t\t\t\tack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n\t\t\t\t\treturn ack;\n\t\t\t\t}\n\t\t\t\tack.push(row);\n\t\t\t\treturn ack;\n\t\t\t}, []);\n\n\t\tconst updateStage = prevStage => {\n\t\t\t// First flush the stage\n\t\t\tconst newStage = prevStage.map(row =>\n\t\t\t\trow.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n\t\t\t);\n\n\t\t\t// Then draw the tetromino\n\t\t\tplayer.tetromino.forEach((row, y) => {\n\t\t\t\trow.forEach((value, x) => {\n\t\t\t\t\tif (value !== 0) {\n\t\t\t\t\t\tnewStage[y + player.pos.y][x + player.pos.x] = [\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t`${player.collided ? 'merged' : 'clear'}`,\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\t// Then check if we got some score if collided\n\t\t\tif (player.collided) {\n\t\t\t\tresetPlayer();\n\t\t\t\treturn sweepRows(newStage);\n\t\t\t}\n\t\t\treturn newStage;\n\t\t};\n\n\t\t// Here are the updates\n\t\tsetStage(prev => updateStage(prev));\n\t}, [\n\t\tplayer.collided,\n\t\tplayer.pos.x,\n\t\tplayer.pos.y,\n\t\tplayer.tetromino,\n\t\tresetPlayer,\n\t]);\n\n\treturn [stage, setStage, rowsCleared];\n};","export const SET_DROP_TIME = 'SET_DROP_TIME';\nexport const SET_GAME_OVER = 'SET_GAME_OVER';\nexport const SET_CURRENT_PLAYER = 'SET_CURRENT_PLAYER';\n","import { SET_GAME_OVER, SET_DROP_TIME, SET_CURRENT_PLAYER } from '../constants';\n\nexport const setDropTime = (payload) => {\n\treturn {\n\t\ttype: SET_DROP_TIME,\n\t\tpayload\n\t}\n}\nexport const setGameOver = (payload) => {\n\treturn {\n\t\ttype: SET_GAME_OVER,\n\t\tpayload\n\t}\n}\nexport const setCurrentPlayer = (payload) => {\n\treturn {\n\t\ttype: SET_CURRENT_PLAYER,\n\t\tpayload\n\t}\n}","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n\tdisplay: grid;\n\tgrid-template-rows: repeat(\n\t\t${props => props.height},\n\t\tcalc(25vw / ${props => props.width})\n\t);\n\tgrid-template-columns: repeat(${props => props.width}, 1fr);\n\tgrid-gap: 1px;\n\tborder: 3px solid #2A9D8F;\n\twidth: 100%;\n\tmax-width: 25vw;\n\tbackground-color: #2A9D8F;\n\tborder-radius: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\nborder-radius: 4px;\n  background: rgba(${props => props.color}, 0.6);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`;\n","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({ type }) => (\n\t<StyledCell type={type} color={TETROMINOS[type].color} />\n);\n\nexport default React.memo(Cell);","import React from 'react';\nimport { StyledStage } from './styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n\t<StyledStage width={stage[0].length} height={stage.length}>\n\t\t{stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n\t</StyledStage>\n);\n\nexport default Stage;","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-bottom: 1em;\n\tpadding: 20px;\n\tborder: 3px solid #2a9d8f;\n\tmin-height: 30px;\n\twidth: 100%;\n\tborder-radius: 20px;\n\tcolor: ${props => (props.gameOver ? '#ec85e1' : 'white')};\n\tbackground-color: rgba(42, 157, 143,0.6);\n\tfont-family: Pixel, Arial, Helvetica, sans-serif;\n\tfont-size: 0.8rem;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ text }) => {\n\tconst gameOver = useSelector(state => state.gameOver);\n\treturn (\n\t\t<StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n\t)\n};\n\nexport default Display;","import styled from 'styled-components';\nimport LoadingOverlay from 'react-loading-overlay';\n\nexport const StyledLoader = styled(LoadingOverlay)`\n\t\tposition: fixed;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\twidth: 20em;\n\t\theight: 20em;\n\t\n\t.css-df17o1{\n\t\tbackground: transparent;\n\t}\n\n\t.loading__spinner {\n\t\twidth: 100px;\n\t\t& svg circle { stroke: #2a9d8f;}\n\t}\n\n\t.spinner{\n\t\tposition: relative;\n\t\ttop: 0;\n\t}\n\n\t.loading__content {\n\t\tposition: absolute;\n\t\ttop: 50px;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%);\n\t\tfont-size: 1.2em;\n\t\tfont-weight: 900;\n\t\tcolor: black;\n\t}\n`","import React from 'react'\n\n//styles ==> \nimport { StyledLoader } from './styles/StyledLoading';\n\nconst Loading = ({ loading }) => {\n\treturn (\n\t\t<StyledLoader\n\t\t\tactive={loading}\n\t\t\tspinner\n\t\t\ttext='Loading...'\n\t\t\tclassName='loading__overlay'\n\t\t\tclassNamePrefix='loading__'\n\t\t/>\n\t)\n}\n\nexport default Loading;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFirestore } from '../firebase';\nimport firebase from 'firebase/app';\n\nimport { createStage, checkCollision } from '../gameHelpers';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\nimport { StyledStartButton } from './StartButton';\nimport Zoom from 'react-reveal/Zoom';\nimport Swal from 'sweetalert2';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\nimport { setDropTime, setGameOver, setCurrentPlayer } from '../redux/actions ';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport Loading from './loading';\n\nconst Tetris = () => {\n\tconst dispatch = useDispatch();\n\tconst dropTime = useSelector(state => state.dropTime);\n\tconst gameOver = useSelector(state => state.gameOver);\n\tconst currentPlayer = useSelector(state => state.currentPlayer);\n\n\tconst [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n\tconst [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n\tconst [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n\tconst [loading, setLoading] = useState(true);\n\tconst [visit, setVisit] = useState(0);\n\tconst [puntaje, setPuntaje] = useState([\n\t\t{\n\t\t\tuser: '',\n\t\t\tnumber: 0\n\t\t},\n\t\t{\n\t\t\tuser: '',\n\t\t\tnumber: 0\n\t\t},\n\t\t{\n\t\t\tuser: '',\n\t\t\tnumber: 0\n\t\t}\n\t]);\n\t//Firebase ==>\n\n\tuseEffect(() => {\n\t\tconst db = getFirestore();\n\t\tconst scores = db.collection('Tetris666').doc('FrancoTetris')\n\t\tscores.get().then(puntajes => {\n\t\t\tsetLoading(false)\n\t\t\tscores.update({\n\t\t\t\tvisits: firebase.firestore.FieldValue.increment(1)\n\t\t\t})\n\t\t\tconst data = puntajes.data();\n\t\t\tsetVisit(data.visits)\n\t\t\tsetPuntaje([\n\t\t\t\t{\n\t\t\t\t\tuser: data.maxName,\n\t\t\t\t\tnumber: data.maxScore\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuser: data.secName,\n\t\t\t\t\tnumber: data.secScore\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tuser: data.thirdName,\n\t\t\t\t\tnumber: data.thirdScore\n\t\t\t\t}\n\t\t\t])\n\t\t})\n\t}, [])\n\n\t//-------- <==\n\n\tuseEffect(() => {\n\t\tif (gameOver) {\n\t\t\tlet objeto = {\n\t\t\t\tuser: currentPlayer,\n\t\t\t\tnumber: score\n\t\t\t}\n\t\t\tlet array = [...puntaje];\n\n\t\t\tif (score > puntaje[0].number) {\n\t\t\t\tarray.unshift(objeto);\n\t\t\t\tarray.pop();\n\t\t\t\tsetPuntaje(array);\n\t\t\t} else if (score > puntaje[1].number) {\n\t\t\t\tarray.pop();\n\t\t\t\tlet player = array.pop();\n\t\t\t\tarray.push(objeto);\n\t\t\t\tarray.push(player);\n\t\t\t\tsetPuntaje(array);\n\t\t\t} else if (score > puntaje[2].number) {\n\t\t\t\tarray.pop();\n\t\t\t\tarray.push(objeto);\n\t\t\t\tsetPuntaje(array);\n\t\t\t}\n\n\n\t\t\tconst db = getFirestore();\n\t\t\tconst scores = db.collection('Tetris666').doc('FrancoTetris')\n\t\t\tscores.update({\n\t\t\t\t//counter: firebase.firestore.FieldValue.increment(1)\n\t\t\t\tmaxName: puntaje[0].user,\n\t\t\t\tmaxScore: puntaje[0].number,\n\t\t\t\tsecName: puntaje[1].user,\n\t\t\t\tsecScore: puntaje[1].number,\n\t\t\t\tthirdName: puntaje[2].user,\n\t\t\t\tthirdScore: puntaje[2].number,\n\t\t\t}).then(() => (\n\t\t\t\tconsole.log('rompiste un record')\n\t\t\t))\n\t\t}\n\t}, [gameOver])\n\n\n\tconst movePlayer = dir => {\n\t\tif (!checkCollision(player, stage, { x: dir, y: 0 })) {\n\t\t\tupdatePlayerPos({ x: dir, y: 0 });\n\t\t}\n\t};\n\n\tconst keyUp = ({ keyCode }) => {\n\t\tif (!gameOver) {\n\t\t\tif (keyCode === 40) {\n\t\t\t\tdispatch(setDropTime(1000 / (level + 1)));\n\t\t\t}\n\t\t}\n\t};\n\n\tconst startGame = () => {\n\t\tsetStage(createStage());\n\t\tdispatch(setDropTime(1000));\n\t\tresetPlayer();\n\t\tsetScore(0);\n\t\tsetLevel(0);\n\t\tsetRows(0);\n\t\tdispatch(setGameOver(false));\n\t};\n\n\tconst drop = () => {\n\t\t// Increase level when player has cleared 10 rows\n\t\tif (rows > (level + 1) * 10) {\n\t\t\tsetLevel(prev => prev + 1);\n\t\t\t// Also increase speed\n\t\t\tdispatch(setDropTime(1000 / (level + 1) + 200));\n\t\t}\n\n\t\tif (!checkCollision(player, stage, { x: 0, y: 1 })) {\n\t\t\tupdatePlayerPos({ x: 0, y: 1, collided: false });\n\t\t} else {\n\t\t\t// Game over!\n\t\t\tif (player.pos.y < 1) {\n\t\t\t\tdispatch(setGameOver(true));\n\t\t\t\tdispatch(setDropTime(null));\n\t\t\t}\n\t\t\tupdatePlayerPos({ x: 0, y: 0, collided: true });\n\t\t}\n\t};\n\n\tconst dropPlayer = () => {\n\t\tdispatch(setDropTime(null));\n\t\tdrop();\n\t};\n\n\n\tuseInterval(() => {\n\t\tdrop();\n\t}, dropTime);\n\n\tconst move = ({ keyCode }) => {\n\t\tif (!gameOver) {\n\t\t\tif (keyCode === 37) {\n\t\t\t\tmovePlayer(-1);\n\t\t\t} else if (keyCode === 39) {\n\t\t\t\tmovePlayer(1);\n\t\t\t} else if (keyCode === 40) {\n\t\t\t\tdropPlayer();\n\t\t\t} else if (keyCode === 38) {\n\t\t\t\tplayerRotate(stage, 1);\n\t\t\t}\n\t\t}\n\t};\n\tconst [input, setInput] = useState('');\n\tconst handleChange = (e) => {\n\t\tsetInput(e.target.value);\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(setCurrentPlayer(input));\n\t}\n\n\tconst handleError = (e) => {\n\t\te.preventDefault();\n\t\tSwal.fire({\n\t\t\theightAuto: false,\n\t\t\ttitle: 'Error!',\n\t\t\ttext: 'Put a player name to play!',\n\t\t\ticon: 'error',\n\t\t\tconfirmButtonText: 'Ok',\n\t\t\tconfirmButtonColor: '#ec85e1',\n\t\t})\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{loading === false ? (\n\t\t\t\t<StyledTetrisWrapper\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\tonKeyDown={e => move(e)}\n\t\t\t\t\tonKeyUp={keyUp}\n\t\t\t\t>\n\t\t\t\t\t<StyledTetris>\n\t\t\t\t\t\t<Zoom left>\n\t\t\t\t\t\t\t<div className='box_containers'>\n\t\t\t\t\t\t\t\t<div className='info_container'>\n\t\t\t\t\t\t\t\t\t<aside className='box_info'>\n\t\t\t\t\t\t\t\t\t\t<h2>Tetris Game</h2>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<p>Developed by</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>Franco Ortiz</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<a href='https://github.com/Pakvothe/ReactTetris' target='_blank' rel='noreferrer' className='amarillo'> ~ Repository ~ </a>\n\t\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t\t<aside className='box_info'>\n\t\t\t\t\t\t\t\t\t\t<h2>Controls</h2>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<p className='controls'><span className='amarillo'>⇧ </span>,  Spin Tetromino</p>\n\t\t\t\t\t\t\t\t\t\t\t<p className='controls'><span className='amarillo'>⇩ </span>,  Fast Fall</p>\n\t\t\t\t\t\t\t\t\t\t\t<p className='controls'><span className='amarillo'>⇨ </span>,  Right</p>\n\t\t\t\t\t\t\t\t\t\t\t<p className='controls'><span className='amarillo'>⇦ </span>,  Left</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='info_container score_container'>\n\t\t\t\t\t\t\t\t\t<aside className='box_info '>\n\t\t\t\t\t\t\t\t\t\t<h2 >Scores</h2>\n\t\t\t\t\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>Max Score</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className='amarillo'>{puntaje[0].user}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className='amarillo'>{puntaje[0].number}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>Second Score</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className='amarillo'>{puntaje[1].user}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className='amarillo'>{puntaje[1].number}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>Third Score</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className='amarillo'>{puntaje[2].user}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className='amarillo'>{puntaje[2].number}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t\t<aside className='box_info '>\n\t\t\t\t\t\t\t\t\t\t<h4>Visitas </h4>\n\t\t\t\t\t\t\t\t\t\t<p className='amarillo'>{visit}</p>\n\t\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Zoom>\n\t\t\t\t\t\t<Stage stage={stage} />\n\t\t\t\t\t\t<Zoom right>\n\t\t\t\t\t\t\t<aside>\n\t\t\t\t\t\t\t\t{gameOver ? (\n\t\t\t\t\t\t\t\t\t<Display gameOver={gameOver} text=\"Game Over\" />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Display text={`Score: ${score}`} />\n\t\t\t\t\t\t\t\t\t\t\t<Display text={`rows: ${rows}`} />\n\t\t\t\t\t\t\t\t\t\t\t<Display text={`Level: ${level}`} />\n\t\t\t\t\t\t\t\t\t\t\t<Display text={`Fall Speed: ${Math.round(dropTime)} ms`} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t<aside className='box_info' >\n\t\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t{!currentPlayer ? (\n\t\t\t\t\t\t\t\t\t\t\t<input className='user_input' onChange={handleChange} value={input} type='text' placeholder='Player Name' required />\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<h2 className='user_name'>{currentPlayer}</h2>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t{input.length > 2 ? (\n\n\t\t\t\t\t\t\t\t\t\t\t<StartButton type='submit' callback={startGame} />\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledStartButton onClick={handleError} className='btn-sec'>Start Game</StyledStartButton>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t</Zoom>\n\t\t\t\t\t</StyledTetris>\n\t\t\t\t</StyledTetrisWrapper >\n\t\t\t) : (\n\t\t\t\t\t<Loading loading={loading} />\n\t\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Tetris;","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n\tconst [player, setPlayer] = useState({\n\t\tpos: { x: 0, y: 0 },\n\t\ttetromino: TETROMINOS[0].shape,\n\t\tcollided: false,\n\t});\n\n\tfunction rotate(matrix, dir) {\n\t\t// Make the rows to become cols (transpose)\n\t\tconst mtrx = matrix.map((_, index) => matrix.map(column => column[index]));\n\t\t// Reverse each row to get a rotaded matrix\n\t\tif (dir > 0) return mtrx.map(row => row.reverse());\n\t\treturn mtrx.reverse();\n\t}\n\n\tfunction playerRotate(stage, dir) {\n\t\tconst clonedPlayer = JSON.parse(JSON.stringify(player));\n\t\tclonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n\t\tconst pos = clonedPlayer.pos.x;\n\t\tlet offset = 1;\n\t\twhile (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n\t\t\tclonedPlayer.pos.x += offset;\n\t\t\toffset = -(offset + (offset > 0 ? 1 : -1));\n\t\t\tif (offset > clonedPlayer.tetromino[0].length) {\n\t\t\t\trotate(clonedPlayer.tetromino, -dir);\n\t\t\t\tclonedPlayer.pos.x = pos;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tsetPlayer(clonedPlayer);\n\t}\n\n\tconst updatePlayerPos = ({ x, y, collided }) => {\n\t\tsetPlayer(prev => ({\n\t\t\t...prev,\n\t\t\tpos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n\t\t\tcollided,\n\t\t}));\n\t};\n\n\tconst resetPlayer = useCallback(() => {\n\t\tsetPlayer({\n\t\t\tpos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n\t\t\ttetromino: randomTetromino().shape,\n\t\t\tcollided: false,\n\t\t});\n\t}, []);\n\n\treturn [player, updatePlayerPos, resetPlayer, playerRotate];\n};","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n\tconst [score, setScore] = useState(0);\n\tconst [rows, setRows] = useState(0);\n\tconst [level, setLevel] = useState(0);\n\n\tconst linePoints = [40, 100, 300, 1200];\n\n\tconst calcScore = useCallback(() => {\n\t\t// We have score\n\t\tif (rowsCleared > 0) {\n\t\t\t// This is how original Tetris score is calculated\n\t\t\tsetScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n\t\t\tsetRows(prev => prev + rowsCleared);\n\t\t}\n\t}, [level, linePoints, rowsCleared]);\n\n\tuseEffect(() => {\n\t\tcalcScore();\n\t}, [calcScore, rowsCleared, score]);\n\n\treturn [score, setScore, rows, setRows, level, setLevel];\n};","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n\tconst savedCallback = useRef();\n\t// Remember the latest callback.\n\tuseEffect(() => {\n\t\tsavedCallback.current = callback;\n\t}, [callback]);\n\n\t// Set up the interval.\n\tuseEffect(() => {\n\t\tfunction tick() {\n\t\t\tsavedCallback.current();\n\t\t}\n\t\tif (delay !== null) {\n\t\t\tconst id = setInterval(tick, delay);\n\t\t\treturn () => {\n\t\t\t\tclearInterval(id);\n\t\t\t};\n\t\t}\n\t}, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n\t<div className=\"App\">\n\t\t<Tetris />\n\t</div>\n);\n\nexport default App;","import {\n\tSET_DROP_TIME,\n\tSET_GAME_OVER,\n\tSET_CURRENT_PLAYER,\n} from '../constants';\n\nconst initialState = {\n\tdropTime: null,\n\tgameOver: false,\n\tcurrentPlayer: '',\n\n};\n\nconst Reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_DROP_TIME:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdropTime: action.payload\n\t\t\t}\n\n\t\tcase SET_GAME_OVER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgameOver: action.payload\n\t\t\t}\n\t\tcase SET_CURRENT_PLAYER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPlayer: action.payload\n\t\t\t}\n\n\t\tdefault: return state;\n\t}\n}\n\nexport default Reducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport Reducer from '../reducers';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n\tReducer,\n\tcompose(\n\t\tapplyMiddleware(thunk),\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\t)\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//Redux ==>\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}